<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>forceps</id>
    <version>1.00</version>
    <owners>bcurran3</owners>
    <packageSourceUrl>https://github.com/bcurran3/ChocolateyPackages/tree/master/forceps</packageSourceUrl>
    <title>ForcePS (Portable)</title>
    <authors>Bill Curran</authors>
    <projectUrl>https://github.com/bcurran3/ChocolateyPackages/blob/master/forceps</projectUrl>
    <iconUrl>https://raw.githubusercontent.com/bcurran3/ChocolateyPackages/master/forceps/ForcePS_icon.png</iconUrl>
    <copyright>Copyleft Bill Curran</copyright>
    <licenseUrl>https://www.gnu.org/licenses/gpl.html</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <bugTrackerUrl>https://github.com/bcurran3/ChocolateyPackages/issues</bugTrackerUrl>
    <tags>forceps powershell utility portable</tags>
    <summary>ForcePS - Allows you to run a PowerShell script from the Command Prompt bypassing Windows PowerShell Script Execution Policy.</summary>
    <description>
##No more "File PSscript.ps1 cannot be loaded because running scripts is disabled on this system."

###ForcePS - Allows you to run a PowerShell script from the Command Prompt bypassing Windows PowerShell Script Execution Policy.

####"Laziness is the mother of invention."

I wrote ForcePS because I was lazy and didn't want to keep changing my Windows PowerShell Script Execution Policy back and forth between RemoteSigned (Restricted is safer!) and Unrestricted to run scripts I've either downloaded or wrote. So I made a little one line batch file that would call PowerShell with the appropriate parameters to bypass the execution policy. Now I've added some error checking, compiled it, and am releasing it to the world for others who honestly can't remember or don't want to have to type "Set-ExecutionPolicy Unrestricted" and "Set-ExecutionPolicy Restricted" infrequently. Now you can just run ForcePS from the Command Prompt followed by the name of a PowerShell script and... Walah! The PS script will run without hassle, all without you having to change any settings. Elevated Command Prompt required for some small sense of security.

Chocolatey will download ForcePS to the package's tools directory and shim it so its available for global use.

USAGE: ForcePS PSscript.ps1 parameter2 parameter3

**[PACKAGE NOTES](https://github.com/bcurran3/ChocolateyPackages/blob/master/forceps/readme.md)**
	</description>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
